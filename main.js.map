{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormArray, Validators, FormGroup } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = `R Assignment`;\n  candidateForm = this.fb.group({\n    fullName: ['', [Validators.pattern('^[a-zA-Z \\-\\']+'), Validators.maxLength(50), Validators.required]],\n    contactType: ['', Validators.required],\n    email: ['', [Validators.email, Validators.required]],\n    cemail: ['', Validators.required],\n    phone: ['', [Validators.pattern(/^[6-9]\\d{9}$/), Validators.required]],\n    skills: this.fb.array([\n      this.fb.group({\n        skill: ['', [Validators.pattern('^[a-zA-Z \\-\\']+'), Validators.maxLength(50), Validators.required]],\n        exp: ['', Validators.required],\n        proficiency: ['', Validators.required]\n      })\n    ])\n  },\n    { validator: this.emailMatchValidator }\n  )\n  get skills() {\n    return this.candidateForm.get('skills') as FormArray;\n  }\n\n\n  constructor(private fb: FormBuilder) { }\n  //to check if both the emails are matching\n  emailMatchValidator(frm: FormGroup) {\n    return frm.controls['email'].value === frm.controls['cemail'].value ? null : { 'mismatch': true };\n  }\n\n  addSkills() {\n    this.skills.push( this.fb.group({\n      skill: ['', [Validators.pattern('^[a-zA-Z \\-\\']+'), Validators.maxLength(50), Validators.required]],\n      exp: ['', Validators.required],\n      proficiency: ['', Validators.required]\n    }));\n  }\n  onSubmit() {\n    console.log(\"form sub\", this.candidateForm)\n\n  }\n}\n","<form [formGroup]=\"candidateForm\" (ngSubmit)=\"onSubmit()\">\n  <label>\n    Full Name:\n    <input type=\"text\" formControlName=\"fullName\">\n  </label>\n  <fieldset class=\"row mb-3\">\n    <legend class=\"col-form-label col-sm-2 pt-0\">Contact Preference</legend>\n    <div class=\"col-sm-10\">\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"contactType\" id=\"contactType1\" value=\"email\"\n          formControlName=\"contactType\">\n        <label class=\"form-check-label\" for=\"contactType1\">\n          Email\n        </label>\n      </div>\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"contactType\" id=\"contactType2\" value=\"phone\"\n          formControlName=\"contactType\">\n        <label class=\"form-check-label\" for=\"contactType2\">\n          Phone\n        </label>\n      </div>\n    </div>\n  </fieldset>\n  <label>\n    email:\n    <input type=\"text\" formControlName=\"email\">\n  </label>\n  <label>\n    confirm email:\n    <input type=\"text\" formControlName=\"cemail\">\n  </label>\n  <label>\n    Phone:\n    <input type=\"tel\" formControlName=\"phone\">\n  </label>\n\n  <div formArrayName=\"skills\">\n    <h3>Skills</h3> <button (click)=\"addSkills()\">Add Skill</button>\n\n    <div *ngFor=\"let skill of skills.controls; let i=index\" formGroupName=\"{{i}}\">\n      <label>\n        Skill: \n        <input type=\"text\"  formControlName=\"skill\">\n      </label>\n      <label>\n        Experience: \n        <input type=\"text\"  formControlName=\"exp\">\n      </label>\n      <fieldset class=\"row mb-3\">\n        <legend class=\"col-form-label col-sm-2 pt-0\">proficiency</legend>\n        <div class=\"col-sm-10\">\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\"  id=\"{{'id'+i}}\" value=\"Beginner\"\n              formControlName=\"proficiency\">\n            <label class=\"form-check-label\" for=\"{{'id'+i}}\">\n              Beginner\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\"  id=\"{{'id'+i}}\" value=\"intermediate\"\n              formControlName=\"proficiency\">\n            <label class=\"form-check-label\" for=\"{{'id'+i}}\">\n              intermediate\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"radio\"  id=\"{{'id'+i}}\" value=\"Advanced\"\n              formControlName=\"proficiency\">\n            <label class=\"form-check-label\" for=\"{{'id'+i}}\">\n              Advanced\n            </label>\n          </div>\n        </div>\n      </fieldset>\n      \n    </div>\n  </div>\n\n  <div class=\"col-auto\">\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </div>\n</form>\n\n\n<p>\n  Form Value: {{ candidateForm.value | json }}\n</p>\n\n\n<p>\n  Form Status: {{ candidateForm.status }}\n</p>\n\n\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}